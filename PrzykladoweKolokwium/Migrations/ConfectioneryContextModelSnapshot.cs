// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PrzykladoweKolokwium.Models;

namespace PrzykladoweKolokwium.Migrations
{
    [DbContext(typeof(ConfectioneryContext))]
    partial class ConfectioneryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PrzykladoweKolokwium.Models.Client", b =>
                {
                    b.Property<int>("IdClient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.HasKey("IdClient");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            IdClient = 1,
                            Name = "Adam",
                            Surname = "Kowalski"
                        },
                        new
                        {
                            IdClient = 2,
                            Name = "Ewa",
                            Surname = "Nowak"
                        });
                });

            modelBuilder.Entity("PrzykladoweKolokwium.Models.ConfectioneryProduct", b =>
                {
                    b.Property<int>("IdConfectioneryProduct")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<float>("PricePerUnit")
                        .HasColumnType("real");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.HasKey("IdConfectioneryProduct");

                    b.ToTable("ConfectioneryProducts");

                    b.HasData(
                        new
                        {
                            IdConfectioneryProduct = 1,
                            Name = "Makowiec",
                            PricePerUnit = 0f,
                            Type = "Ciasto"
                        },
                        new
                        {
                            IdConfectioneryProduct = 2,
                            Name = "Sernik",
                            PricePerUnit = 0f,
                            Type = "Ciasto"
                        });
                });

            modelBuilder.Entity("PrzykladoweKolokwium.Models.Employee", b =>
                {
                    b.Property<int>("IdEmployee")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.HasKey("IdEmployee");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            IdEmployee = 1,
                            Name = "Aleksandra",
                            Surname = "Kowalska"
                        },
                        new
                        {
                            IdEmployee = 2,
                            Name = "Jan",
                            Surname = "Nowak"
                        });
                });

            modelBuilder.Entity("PrzykladoweKolokwium.Models.Order", b =>
                {
                    b.Property<int>("IdOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AcceptanceDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<int>("IdClient")
                        .HasColumnType("int");

                    b.Property<int>("IdEmployee")
                        .HasColumnType("int");

                    b.Property<DateTime>("RealizationDate")
                        .HasColumnType("datetime2");

                    b.HasKey("IdOrder");

                    b.HasIndex("IdClient");

                    b.HasIndex("IdEmployee");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            IdOrder = 1,
                            AcceptanceDate = new DateTime(2020, 6, 20, 16, 11, 47, 507, DateTimeKind.Local).AddTicks(1290),
                            IdClient = 1,
                            IdEmployee = 1,
                            RealizationDate = new DateTime(2020, 6, 23, 16, 11, 47, 513, DateTimeKind.Local).AddTicks(1294)
                        },
                        new
                        {
                            IdOrder = 2,
                            AcceptanceDate = new DateTime(2020, 6, 21, 16, 11, 47, 513, DateTimeKind.Local).AddTicks(1294),
                            Comments = "Na środę!",
                            IdClient = 2,
                            IdEmployee = 2,
                            RealizationDate = new DateTime(2020, 6, 24, 16, 11, 47, 513, DateTimeKind.Local).AddTicks(1294)
                        });
                });

            modelBuilder.Entity("PrzykladoweKolokwium.Models.OrderItem", b =>
                {
                    b.Property<int>("IdOrder")
                        .HasColumnType("int");

                    b.Property<int>("IdConfectioneryProduct")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("IdOrder", "IdConfectioneryProduct");

                    b.HasIndex("IdConfectioneryProduct");

                    b.ToTable("OrderItems");

                    b.HasData(
                        new
                        {
                            IdOrder = 1,
                            IdConfectioneryProduct = 1,
                            Comments = "Dużo",
                            Quantity = 15
                        },
                        new
                        {
                            IdOrder = 2,
                            IdConfectioneryProduct = 1,
                            Quantity = 2
                        },
                        new
                        {
                            IdOrder = 2,
                            IdConfectioneryProduct = 2,
                            Quantity = 1
                        });
                });

            modelBuilder.Entity("PrzykladoweKolokwium.Models.Order", b =>
                {
                    b.HasOne("PrzykladoweKolokwium.Models.Client", "Client")
                        .WithMany("Orders")
                        .HasForeignKey("IdClient")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PrzykladoweKolokwium.Models.Employee", "Employee")
                        .WithMany("Orders")
                        .HasForeignKey("IdEmployee")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PrzykladoweKolokwium.Models.OrderItem", b =>
                {
                    b.HasOne("PrzykladoweKolokwium.Models.ConfectioneryProduct", "ConfectioneryProduct")
                        .WithMany("OrderItems")
                        .HasForeignKey("IdConfectioneryProduct")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PrzykladoweKolokwium.Models.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("IdOrder")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
